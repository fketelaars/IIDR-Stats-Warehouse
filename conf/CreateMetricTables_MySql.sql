-- CDC Statistics Warehouse - MySQL Version

CREATE TABLE CDC_STATS_ALL (
    SRC_DATASTORE VARCHAR(30) NOT NULL,
    SUBSCRIPTION VARCHAR(30) NOT NULL,
    COLLECT_TS DATETIME NOT NULL,
    SRC_TGT CHAR(1) NOT NULL,
    METRIC_ID INT NOT NULL,
    METRIC_VALUE BIGINT,
    PRIMARY KEY (SRC_DATASTORE, SUBSCRIPTION, COLLECT_TS, SRC_TGT, METRIC_ID)
);

-- COLLECT_TS - Stats Gather TIMESTAMP

-- https://www.ibm.com/docs/en/idr/11.3.3?topic=metrics-datastore

-- ==============================
-- Source Datastore View
-- ==============================
CREATE OR REPLACE VIEW CDC_STATS_SRC_DATASTORE AS
SELECT SRC_DATASTORE, SUBSCRIPTION, COLLECT_TS,
    MAX(CASE WHEN METRIC_ID = 1001 THEN METRIC_VALUE END) AS SRC_DS_TIME_CHECK_MISSED, 
    MAX(CASE WHEN METRIC_ID = 1002 THEN METRIC_VALUE END) AS SRC_DS_FREE_MEMORY_BYTES, 
    MAX(CASE WHEN METRIC_ID = 1003 THEN METRIC_VALUE END) AS SRC_DS_MAX_MEMORY_BYTES,
    MAX(CASE WHEN METRIC_ID = 1004 THEN METRIC_VALUE END) AS SRC_DS_TOTAL_MEMORY_BYTES, 
    MAX(CASE WHEN METRIC_ID = 1005 THEN METRIC_VALUE END) AS SRC_DS_GARBAGE_COLL_CNT, 
    MAX(CASE WHEN METRIC_ID = 1006 THEN METRIC_VALUE END) AS SRC_DS_GARBAGE_COLL_CPU_MS,
    MAX(CASE WHEN METRIC_ID = 1007 THEN METRIC_VALUE END) AS SRC_DS_GLOBAL_MEM_MGR_BYTES, 
    MAX(CASE WHEN METRIC_ID = 2401 THEN METRIC_VALUE END) AS SRC_DS_NETWORK_ERRORS 
FROM CDC_STATS_ALL
WHERE SRC_TGT = 'S'
GROUP BY SRC_DATASTORE, SUBSCRIPTION, COLLECT_TS;

--https://www.ibm.com/docs/en/idr/11.3.3?topic=metrics-database-workload

-- ==============================
-- Source DB Workload
-- ==============================
CREATE OR REPLACE VIEW CDC_STATS_SRC_DB_WORKLOAD AS
SELECT SRC_DATASTORE, SUBSCRIPTION, COLLECT_TS,
    MAX(CASE WHEN METRIC_ID = 1103 THEN METRIC_VALUE END) AS SRC_DB_TOTAL_TX, 
    MAX(CASE WHEN METRIC_ID = 1301 THEN METRIC_VALUE END) AS SRC_DB_IN_SCOPE_TX, 
    MAX(CASE WHEN METRIC_ID = 1310 THEN METRIC_VALUE END) AS SRC_DB_TX_HIST_0X_TO_1_2X, 
    MAX(CASE WHEN METRIC_ID = 1311 THEN METRIC_VALUE END) AS SRC_DB_TX_HIST_1_2X_TO_X,
    MAX(CASE WHEN METRIC_ID = 1312 THEN METRIC_VALUE END) AS SRC_DB_TX_HIST_X_TO_2X,
    MAX(CASE WHEN METRIC_ID = 1313 THEN METRIC_VALUE END) AS SRC_DB_TX_HIST_2X_TO_4X,
    MAX(CASE WHEN METRIC_ID = 1314 THEN METRIC_VALUE END) AS SRC_DB_TX_HIST_4X_TO_8X,
    MAX(CASE WHEN METRIC_ID = 1315 THEN METRIC_VALUE END) AS SRC_DB_TX_HIST_8X_LARGER
FROM CDC_STATS_ALL
WHERE SRC_TGT = 'S'
GROUP BY SRC_DATASTORE, SUBSCRIPTION, COLLECT_TS;

-- ==============================
-- Source Read + Parsing
-- ==============================
--https://www.ibm.com/docs/en/idr/11.3.3?topic=metrics-log-reader
--https://www.ibm.com/docs/en/idr/11.3.3?topic=metrics-log-parser
--https://www.ibm.com/docs/en/idr/11.3.3?topic=metrics-single-scrape

CREATE OR REPLACE VIEW CDC_STATS_SRC_READ_PARS AS
SELECT SRC_DATASTORE, SUBSCRIPTION, COLLECT_TS,
    MAX(CASE WHEN METRIC_ID = 101 THEN METRIC_VALUE END) AS SRC_READ_DB_BYTES_PROC, --Source DataBase bytes processed
    MAX(CASE WHEN METRIC_ID = 1101 THEN METRIC_VALUE END) AS SRC_READ_PHYSICAL_BYTES_READ, -- Physical bytes read
    MAX(CASE WHEN METRIC_ID = 1104 THEN METRIC_VALUE END) AS SRC_READ_THREAD_CPU_MS_PER_S, -- Thread CPU millis/sec
    MAX(CASE WHEN METRIC_ID = 1201 THEN METRIC_VALUE END) AS SRC_PARS_DISK_WRITES_BYTES,
    MAX(CASE WHEN METRIC_ID = 1202 THEN METRIC_VALUE END) AS SRC_PARS_DISK_READS_BYTES,
    MAX(CASE WHEN METRIC_ID = 1203 THEN METRIC_VALUE END) AS SRC_PARS_DISK_SIZE_BYTES,
    MAX(CASE WHEN METRIC_ID = 1304 THEN METRIC_VALUE END) AS SRC_PARS_DDL_OPERATIONS,
    MAX(CASE WHEN METRIC_ID = 1401 THEN METRIC_VALUE END) AS SRC_SCRAPE_DISK_WRITES_BYTES,
    MAX(CASE WHEN METRIC_ID = 1402 THEN METRIC_VALUE END) AS SRC_SCRAPE_DISK_READ_BYTES,
    MAX(CASE WHEN METRIC_ID = 1403 THEN METRIC_VALUE END) AS SRC_SCRAPE_DISK_SIZE_BYTES
FROM CDC_STATS_ALL
WHERE SRC_TGT = 'S'
GROUP BY SRC_DATASTORE, SUBSCRIPTION, COLLECT_TS;

-- ==============================
-- Source Engine
-- ==============================
-- https://www.ibm.com/docs/en/idr/11.3.3?topic=metrics-source-engine

CREATE OR REPLACE VIEW CDC_STATS_SRC_ENG AS
SELECT SRC_DATASTORE, SUBSCRIPTION, COLLECT_TS,
    MAX(CASE WHEN METRIC_ID = 102 THEN METRIC_VALUE END) AS SRC_ENG_BYTES_PROC,
    MAX(CASE WHEN METRIC_ID = 104 THEN METRIC_VALUE END) AS SRC_ENG_PRE_FILTER_INS,-- Inserts from SRC
    MAX(CASE WHEN METRIC_ID = 105 THEN METRIC_VALUE END) AS SRC_ENG_PRE_FILTER_UPD,-- Update from SRC
    MAX(CASE WHEN METRIC_ID = 106 THEN METRIC_VALUE END) AS SRC_ENG_PRE_FILTER_DLT,-- Delete from SRC
    MAX(CASE WHEN METRIC_ID = 107 THEN METRIC_VALUE END) AS SRC_ENG_POST_FILTER_INS,-- Insert count after row filtering
    MAX(CASE WHEN METRIC_ID = 108 THEN METRIC_VALUE END) AS SRC_ENG_POST_FILTER_UPD,-- Update count after row filtering
    MAX(CASE WHEN METRIC_ID = 109 THEN METRIC_VALUE END) AS SRC_ENG_POST_FILTER_DLT,-- Delete count after row filtering
    MAX(CASE WHEN METRIC_ID = 118 THEN METRIC_VALUE END) AS SRC_ENG_LATENCY_VALUE_SECS,
    MAX(CASE WHEN METRIC_ID = 1501 THEN METRIC_VALUE END) AS SRC_ENG_ROWS_DERIVED_COL,
    MAX(CASE WHEN METRIC_ID = 1502 THEN METRIC_VALUE END) AS SRC_ENG_ROWS_CALLING_SRC_DB,
    MAX(CASE WHEN METRIC_ID = 1503 THEN METRIC_VALUE END) AS SRC_ENG_ROWS_CALL_USER_EXITS,
    MAX(CASE WHEN METRIC_ID = 1504 THEN METRIC_VALUE END) AS SRC_ENG_THREAD_CPU_MS_PER_S,
    MAX(CASE WHEN METRIC_ID = 1507 THEN METRIC_VALUE END) AS SRC_ENG_MBCS_CONV_BYTES
FROM CDC_STATS_ALL
WHERE SRC_TGT = 'S'
GROUP BY SRC_DATASTORE, SUBSCRIPTION, COLLECT_TS;

-- ==============================
-- Source Comms
-- ==============================
--https://www.ibm.com/docs/en/idr/11.3.3?topic=metrics-communications
CREATE OR REPLACE VIEW CDC_STATS_SRC_COMMS AS
SELECT SRC_DATASTORE, SUBSCRIPTION, COLLECT_TS,
    MAX(CASE WHEN METRIC_ID = 103 THEN METRIC_VALUE END) AS SRC_COMMS_BYTES_PROC,
    MAX(CASE WHEN METRIC_ID = 2402 THEN METRIC_VALUE END) AS SRC_COMMS_NETWORK_LATENCY_MS,
    MAX(CASE WHEN METRIC_ID = 2404 THEN METRIC_VALUE END) AS SRC_COMMS_MISS_RND_TRIP, --Target missing round trip response If above zero potential issues
    MAX(CASE WHEN METRIC_ID = 2406 THEN METRIC_VALUE END) AS SRC_COMMS_KEEP_ALIVE_SENT,
    MAX(CASE WHEN METRIC_ID = 2408 THEN METRIC_VALUE END) AS SRC_COMMS_BYTES_SENT
FROM CDC_STATS_ALL
WHERE SRC_TGT = 'S'
GROUP BY SRC_DATASTORE, SUBSCRIPTION, COLLECT_TS;

-- ==============================
-- Target Datastore
-- ==============================
--https://www.ibm.com/docs/en/idr/11.3.3?topic=metrics-datastore
CREATE OR REPLACE VIEW CDC_STATS_TGT_DATASTORE AS
SELECT SRC_DATASTORE, SUBSCRIPTION, COLLECT_TS,
    MAX(CASE WHEN METRIC_ID = 1001 THEN METRIC_VALUE END) AS TGT_DS_TIME_CHECK_MISSED,
    MAX(CASE WHEN METRIC_ID = 1002 THEN METRIC_VALUE END) AS TGT_DS_FREE_MEMORY_BYTES,
    MAX(CASE WHEN METRIC_ID = 1003 THEN METRIC_VALUE END) AS TGT_DS_MAX_MEMORY_BYTES,
    MAX(CASE WHEN METRIC_ID = 1004 THEN METRIC_VALUE END) AS TGT_DS_TOTAL_MEMORY_BYTES,
    MAX(CASE WHEN METRIC_ID = 1005 THEN METRIC_VALUE END) AS TGT_DS_GARBAGE_COLL_CNT,
    MAX(CASE WHEN METRIC_ID = 1006 THEN METRIC_VALUE END) AS TGT_DS_GARBAGE_COLL_CPU_MS,
    MAX(CASE WHEN METRIC_ID = 1007 THEN METRIC_VALUE END) AS TGT_DS_GLOBAL_MEM_MGR_BYTES,
    MAX(CASE WHEN METRIC_ID = 2401 THEN METRIC_VALUE END) AS TGT_DS_NETWORK_ERRORS
FROM CDC_STATS_ALL
WHERE SRC_TGT = 'T'
GROUP BY SRC_DATASTORE, SUBSCRIPTION, COLLECT_TS;

-- ==============================
-- Target Comms
-- ==============================
--https://www.ibm.com/docs/en/idr/11.3.3?topic=metrics-communications
CREATE OR REPLACE VIEW CDC_STATS_TGT_COMMS AS
SELECT SRC_DATASTORE, SUBSCRIPTION, COLLECT_TS,
    MAX(CASE WHEN METRIC_ID = 201 THEN METRIC_VALUE END) AS TGT_COMMS_BYTES_PROC,
    MAX(CASE WHEN METRIC_ID = 2403 THEN METRIC_VALUE END) AS TGT_COMMS_NETWORK_LATENCY_MS,
    MAX(CASE WHEN METRIC_ID = 2405 THEN METRIC_VALUE END) AS TGT_COMMS_MISS_RND_TRIP_RSP,
    MAX(CASE WHEN METRIC_ID = 2407 THEN METRIC_VALUE END) AS TGT_KEEP_ALIVE_RECEIVED,
    MAX(CASE WHEN METRIC_ID = 2409 THEN METRIC_VALUE END) AS TGT_BYTES_RECEIVED
FROM CDC_STATS_ALL
WHERE SRC_TGT = 'T'
GROUP BY SRC_DATASTORE, SUBSCRIPTION, COLLECT_TS;

-- ==============================
-- Target Engine
-- ==============================
--https://www.ibm.com/docs/en/idr/11.3.3?topic=metrics-target-engine
CREATE OR REPLACE VIEW CDC_STATS_TGT_ENG AS
SELECT SRC_DATASTORE, SUBSCRIPTION, COLLECT_TS,
    MAX(CASE WHEN METRIC_ID = 202 THEN METRIC_VALUE END) AS TGT_ENG_BYTES_PROC,
    MAX(CASE WHEN METRIC_ID = 204 THEN METRIC_VALUE END) AS TGT_ENG_SRC_INS,
    MAX(CASE WHEN METRIC_ID = 205 THEN METRIC_VALUE END) AS TGT_ENG_SRC_UPD,
    MAX(CASE WHEN METRIC_ID = 204 THEN METRIC_VALUE END) AS TGT_ENG_SRC_DLT,
    MAX(CASE WHEN METRIC_ID = 2101 THEN METRIC_VALUE END) AS TGT_ENG_THREAD_CPU_MS_PER_S,
    MAX(CASE WHEN METRIC_ID = 2103 THEN METRIC_VALUE END) AS TGT_ENG_ROWS_EVAL_EXPR,
    MAX(CASE WHEN METRIC_ID = 2104 THEN METRIC_VALUE END) AS TGT_ENG_ROWS_CALL_TGT_DB,
    MAX(CASE WHEN METRIC_ID = 2105 THEN METRIC_VALUE END) AS TGT_ENG_ROWS_CALL_UE,
    MAX(CASE WHEN METRIC_ID = 2106 THEN METRIC_VALUE END) AS TGT_ENG_MBCS_CONV_BYTES,
    MAX(CASE WHEN METRIC_ID = 2107 THEN METRIC_VALUE END) AS TGT_ENG_NET_EFF_REMOVAL
FROM CDC_STATS_ALL
WHERE SRC_TGT = 'T'
GROUP BY SRC_DATASTORE, SUBSCRIPTION, COLLECT_TS;

-- ==============================
-- Target Application
-- ==============================
--https://www.ibm.com/docs/en/idr/11.3.3?topic=metrics-target-apply

CREATE OR REPLACE VIEW CDC_STATS_TGT_APP AS
SELECT SRC_DATASTORE, SUBSCRIPTION, COLLECT_TS,
    MAX(CASE WHEN METRIC_ID = 207 THEN METRIC_VALUE END) AS TGT_APP_INS,
    MAX(CASE WHEN METRIC_ID = 208 THEN METRIC_VALUE END) AS TGT_APP_UPD,
    MAX(CASE WHEN METRIC_ID = 209 THEN METRIC_VALUE END) AS TGT_APP_DLT,
    (MAX(CASE WHEN METRIC_ID = 207 THEN METRIC_VALUE END)
     + MAX(CASE WHEN METRIC_ID = 208 THEN METRIC_VALUE END)
     + MAX(CASE WHEN METRIC_ID = 209 THEN METRIC_VALUE END)) AS TGT_APP_TOTAL_OPS,
    MAX(CASE WHEN METRIC_ID = 216 THEN METRIC_VALUE END) AS TGT_APP_LATENCY_S,
    MAX(CASE WHEN METRIC_ID = 2301 THEN METRIC_VALUE END) AS TGT_APP_THREAD_CPU_MS_PER_S,
    MAX(CASE WHEN METRIC_ID = 2303 THEN METRIC_VALUE END) AS TGT_APP_CDR_CONFLICTS,
    MAX(CASE WHEN METRIC_ID = 2304 THEN METRIC_VALUE END) AS TGT_APP_ADAPTIVE_APP_CHANGES,
    MAX(CASE WHEN METRIC_ID = 2305 THEN METRIC_VALUE END) AS TGT_APP_APP_COMMITS,
    MAX(CASE WHEN METRIC_ID = 2306 THEN METRIC_VALUE END) AS TGT_APP_AVERAGE_ARRAY_SIZE,
    MAX(CASE WHEN METRIC_ID = 2307 THEN METRIC_VALUE END) AS TGT_APP_DATA_ERRORS_IGNORED,
    MAX(CASE WHEN METRIC_ID = 2308 THEN METRIC_VALUE END) AS TGT_APP_SLOW_DB_OPERATIONS,
    MAX(CASE WHEN METRIC_ID = 1706 THEN METRIC_VALUE END) AS TGT_APP_HTTP_PST_CNT,
    MAX(CASE WHEN METRIC_ID = 1710 THEN METRIC_VALUE END) AS TGT_APP_HTTP_PST_SIZ_0_10,
    MAX(CASE WHEN METRIC_ID = 1711 THEN METRIC_VALUE END) AS TGT_APP_HTTP_PST_SIZ_11_100,
    MAX(CASE WHEN METRIC_ID = 1712 THEN METRIC_VALUE END) AS TGT_APP_HTTP_PST_SIZ_101_1000,
    MAX(CASE WHEN METRIC_ID = 1713 THEN METRIC_VALUE END) AS TGT_APP_HTTP_PST_SIZ_1001_HIGH,
    MAX(CASE WHEN METRIC_ID = 2108 THEN METRIC_VALUE END) AS TGT_APP_RETRY_ATTEMPT_CNT
FROM CDC_STATS_ALL
WHERE SRC_TGT = 'T'
GROUP BY SRC_DATASTORE, SUBSCRIPTION, COLLECT_TS;

-- ==============================
-- Target Application Throughput
-- ==============================
CREATE OR REPLACE VIEW CDC_STATS_TGT_APP_THROUGPUT AS
WITH DELTAS AS (
  SELECT
    ROW_NUMBER() OVER (PARTITION BY SRC_DATASTORE, SUBSCRIPTION ORDER BY COLLECT_TS) AS ROW_NUM,
    SRC_DATASTORE, SUBSCRIPTION, COLLECT_TS, TGT_APP_INS, TGT_APP_UPD, TGT_APP_DLT, TGT_APP_TOTAL_OPS
  FROM CDC_STATS_TGT_APP
)
SELECT B.SRC_DATASTORE, B.SUBSCRIPTION, B.COLLECT_TS,
  TIMESTAMPDIFF(SECOND, A.COLLECT_TS, B.COLLECT_TS) AS TGT_APP_TIME_DELTA,
  (B.TGT_APP_INS - A.TGT_APP_INS) AS TGT_APP_INS_DELTA,
  (B.TGT_APP_UPD - A.TGT_APP_UPD) AS TGT_APP_UPD_DELTA,
  (B.TGT_APP_DLT - A.TGT_APP_DLT) AS TGT_APP_DLT_DELTA,
  (B.TGT_APP_TOTAL_OPS - A.TGT_APP_TOTAL_OPS) AS TGT_APP_TOTAL_OPS_DELTA,
  (B.TGT_APP_INS - A.TGT_APP_INS) / TIMESTAMPDIFF(SECOND, A.COLLECT_TS, B.COLLECT_TS) AS TGT_APP_INS_PER_S,
  (B.TGT_APP_UPD - A.TGT_APP_UPD) / TIMESTAMPDIFF(SECOND, A.COLLECT_TS, B.COLLECT_TS) AS TGT_APP_UPD_PER_S,
  (B.TGT_APP_DLT - A.TGT_APP_DLT) / TIMESTAMPDIFF(SECOND, A.COLLECT_TS, B.COLLECT_TS) AS TGT_APP_DLT_PER_S,
  (B.TGT_APP_TOTAL_OPS - A.TGT_APP_TOTAL_OPS) / TIMESTAMPDIFF(SECOND, A.COLLECT_TS, B.COLLECT_TS) AS TGT_APP_TOTAL_OPS_PER_S
FROM DELTAS A
INNER JOIN DELTAS B
  ON A.SRC_DATASTORE = B.SRC_DATASTORE
 AND A.SUBSCRIPTION = B.SUBSCRIPTION
 AND B.ROW_NUM = A.ROW_NUM + 1
WHERE (B.TGT_APP_INS - A.TGT_APP_INS) >= 0
  AND (B.TGT_APP_UPD - A.TGT_APP_UPD) >= 0
  AND (B.TGT_APP_DLT - A.TGT_APP_DLT) >= 0;

-- ==============================
-- Subscription Status
-- ==============================
CREATE TABLE CDC_SUB_STATUS (
    SRC_DATASTORE VARCHAR(30) NOT NULL,
    SUBSCRIPTION VARCHAR(30) NOT NULL,
    COLLECT_TS DATETIME NOT NULL,
    SUBSCRIPTION_STATUS VARCHAR(30),
    PRIMARY KEY (SRC_DATASTORE, SUBSCRIPTION, COLLECT_TS)
);

-- ==============================
-- Events
-- ==============================
CREATE TABLE CDC_EVENTS (
    SRC_DATASTORE VARCHAR(30) NOT NULL,
    SUBSCRIPTION VARCHAR(30),
    SRC_TGT CHAR(1) NOT NULL,
    EVENT_ID INT NOT NULL,
    EVENT_TYPE VARCHAR(15) NOT NULL,
    EVENT_TIMESTAMP DATETIME NOT NULL,
    EVENT_MESSAGE VARCHAR(1024)
);
